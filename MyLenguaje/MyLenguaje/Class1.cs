using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MyLenguaje
{
	public class Textosxp
	{
		//Solo pongo texto default viejos
		const string r = ":0 Se 0:\n| SE ( _x RSQ 2 )\n| SKR ( \"X es mayor que 2\" ) ||\nALI\n| SKR( \"X es menor que 2\" ) ||\n||\n\n:0 Dar 0:\n SE ( _x RSQ 2 )\n| SKR( \"X es mayor que 2\" ) ||\n| DAR ||\n||\n\n:0 SKR 0:\n| SKR ( \"Resultado: \" + 2 + _letra ) ||\n\n:0 DUM 0:\n| DUM( _x RSQ 5 ) \n| SKR ( _x ) ||\n| _x = _x +1 ||\n||\n\n:0 Far 0:\n| FAR\n| SKR (_x) ||\n| _x = _x +1 ||\nDUM( _x RSQ 5 )||\n\n:0 ENT 0:\n| ENT _entero1 = 1 ||\n\n:0 FALSA 0:\nFALSA \n\n:0 KAR 0:\n| KAR _caracter = 'c' || \n\n:0 KAZ SXA ROM 0:\n\nSXA (<ID>)\n|\n\nSXA ( _entero1 )\n| KAZ 1:\n| SKR ( \"El valor es 1\" ) ||\n| ROM ||\n||\n| KAZ 2:\n| SKR ( \"El valor es 2\" ) ||\n| ROM ||\n||\n| ALI\n| SKR( \"Esta vacio\" ) ||\n| ROM ||\n||\n||\n\n:0 KAP 0:\nKAP ( _Variable1 )\n\n:0 KLA 0:\nKLA _claseprueba \n|\n_claseprueba () \n|\n| _x = 0 ||\n| _valor = _x + _y ||\n||\n| ent _x ||\n| ent _y = 12 ||\n| REA _valor ||\n||\n\n:0 LOG 0:\n| LOG _boolean = VERA || \n\n:0 LEG 0:\n| LEG ( 1000 ) ||\n\n:0 MAT 0:\n| MAT ent[] _arreglo = NOV ent[2] ||\n| _arreglo[1] = 323 ||\n| SKR( \"Res \" + _arreglo[1] ) ||\n\n0: POR 0:\n| POR ( | ent _i = 0 ||\n| _i RSQ 5 ||\n| _i++ || )\n| SKR ( \"Res\" + _i ) ||\n||\n\n:0 PRX 0:\nPRX ( ent _val _arreglo1 )\n|\n| skr( \"tc: \" + _var ) ||\n||\n\n:0 REA 0:\n| REA _real = 12.53 ||\n\n:0 SXN 0:\n| SXN _cadena = \"Hola\" ||";
		const string RESERVA = ":0 Se 0:\n| SE ( _x RSQ 2 )\n |\n    | SKR ( \"X es mayor que 2\" ) ||\n ||\nALI\n |\n    | SKR ( \"X es menor que 2\" ) ||\n ||\n||\n\n:0 Dar 0:\n| SE ( _x RSQ 2 )\n |\n    | SKR ( \"X es mayor que 2\" ) ||\n    | DAR ||\n ||\n||\n\n:0 SKR 0:\n| SKR ( \"Resultado: \" + 2 + _letra ) ||\n\n:0 DUM 0:\n| DUM ( _x RSQ 5 ) \n    | SKR ( _x ) ||\n    | _x = _x + 1 ||\n||\n\n:0 Far 0:\n| FAR\n    | SKR ( _x ) ||\n    | _x = _x + 1 ||\nDUM ( _x RSQ 5 ) ||\n\n:0 ENT 0:\n| ENT _entero1 = 1 ||\n\n:0 FALSA 0:\nFALSA \n\n:0 KAR 0:\n| KAR _caracter = 'c' || \n\n:0 KAZ SXA ROM 0:\n\nSXA ( _entero1 )\n|\n  | KAZ 1 :\n      | SKR ( \"El valor es 1\" ) ||\n      | ROM ||\n  ||\n  | KAZ 2 :\n      | SKR ( \"El valor es 2\" ) ||\n      | ROM ||\n  ||\n    ALI\n    |\n      | SKR ( \"Esta vacio\" ) ||\n      | ROM ||\n    ||\n||\n\n:0 KAP 0:\nKAP ( _Variable1 )\n\n:0 KLA 0:\nKLA _claseprueba \n|\n  _claseprueba ( ) \n   |\n     | _x = 0 ||\n     | _valor = _x + _y ||\n   ||\n   | ent _x ||\n   | ent _y = 12 ||\n   | REA _valor ||\n||\n\n:0 LOG 0:\n| LOG _boolean = VERA || \n\n:0 LEG 0:\n| LEG ( 1000 ) ||\n\n:0 MAT 0:\n| MAT ent [ ] _arreglo = NOV ent [ 2 ] ||\n| _arreglo [ 1 ] = 323 ||\n| SKR ( \"Res \" + _arreglo [ 1 ] ) ||\n\n:0 POR 0:\n| POR ( | ent _i = 0 ||\n            | _i RSQ 5 ||\n            | _i ++ || )\n    | SKR ( \"Res\" + _i ) ||\n||\n\n:0 PRX 0:\nPRX ( ent _val _arreglo1 )\n|\n   | skr ( \"tc: \" + _var ) ||\n||\n\n:0 REA 0:\n| REA _real = 12.53 ||\n\n:0 SXN 0:\n| SXN _cadena = \"Hola\" ||\n\n\n\n\n\n\n\n\n\n";
		const string r1 = "";
		public string repuesto = ":0 Se 0:\n| SE ( _x RSQ 2 )\n |\n    | SKR ( \"X es mayor que 2\" ) ||\n ||\nALI\n |\n    | SKR ( \"X es menor que 2\" ) ||\n ||\n||\n\n:0 Dar 0:\n| SE ( _x RSQ 2 )\n |\n    | SKR ( \"X es mayor que 2\" ) ||\n    | DAR ||\n ||\n||\n\n:0 SKR 0:\n| SKR ( \"Resultado: \" + 2 + _letra ) ||\n\n:0 DUM 0:\n| DUM ( _x RSQ 5 ) \n    | SKR ( _x ) ||\n    | _x = _x + 1 ||\n||\n\n:0 Far 0:\n| FAR\n    | SKR ( _x ) ||\n    | _x = _x + 1 ||\nDUM ( _x RSQ 5 ) ||\n\n:0 ENT 0:\n| ENT _entero1 = 1 ||\n\n:0 FALSA 0:\nFALSA \n\n:0 KAR 0:\n| KAR _caracter = 'c' || \n\n:0 KAZ SXA ROM 0:\n\nSXA ( _entero1 )\n|\n  | KAZ 1 :\n      | SKR ( \"El valor es 1\" ) ||\n      | ROM ||\n  ||\n  | KAZ 2 :\n      | SKR ( \"El valor es 2\" ) ||\n      | ROM ||\n  ||\n    ALI\n    |\n      | SKR ( \"Esta vacio\" ) ||\n      | ROM ||\n    ||\n||\n\n:0 KAP 0:\nKAP ( _Variable1 )\n\n:0 KLA 0:\nKLA _claseprueba \n|\n  _claseprueba ( ) \n   |\n     | _x = 0 ||\n     | _valor = _x + _y ||\n   ||\n   | ent _x ||\n   | ent _y = 12 ||\n   | REA _valor ||\n||\n\n:0 LOG 0:\n| LOG _boolean = VERA || \n\n:0 LEG 0:\n| LEG ( 1000 ) ||\n\n:0 MAT 0:\n| MAT ent [ ] _arreglo = NOV ent [ 2 ] ||\n| _arreglo [ 1 ] = 323 ||\n| SKR ( \"Res \" + _arreglo [ 1 ] ) ||\n\n:0 POR 0:\n| POR ( | ent _i = 0 ||\n            | _i RSQ 5 ||\n            | _i ++ || )\n    | SKR ( \"Res\" + _i ) ||\n||\n\n:0 PRX 0:\nPRX ( ent _val _arreglo1 )\n|\n   | skr ( \"tc: \" + _var ) ||\n||\n\n:0 REA 0:\n| REA _real = 12.53 ||\n\n:0 SXN 0:\n| SXN _cadena = \"Hola\" ||";

	}
}
